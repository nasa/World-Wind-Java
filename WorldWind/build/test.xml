<?xml version="1.0" encoding="ISO-8859-1"?>
<!--$Id$-->
<project name="test">

    <!-- Compiles all World Wind Java sources under the 'test' folder into Java class files under the 'testClasses'
         folder. We configure the javac task parameters 'source' and 'target' in order to explicitly control the Java
         compiler version used to build World Wind classes. Without these parameters, the javac task would use the most
         recent compiler available on the current machine, and the Java compiler version used to build WorldWind classes
         would be unpredictable. For this reason, the Apache ANT manual strongly recommends specifying the 'source' and
         'target' parameters. See the following link for more detail: http://ant.apache.org/manual/CoreTasks/javac.html

         The Java compiler version used by the javac task is defined by the build parameter 'worldwind.jdk.version'.
         By default, this parameter is defined in the file 'build/build.properties'. -->
    <target name="compile.tests" depends="compile">
        <mkdir dir="${worldwind.test.classes.dir}"/>
        <javac srcdir="${worldwind.test.src.dir}"
               destdir="${worldwind.test.classes.dir}"
               source="${worldwind.jdk.version}"
               target="${worldwind.jdk.version}"
               fork="true"
               includeantruntime="false"
               memoryMaximumSize="512m">
            <classpath>
                <pathelement location="${worldwind.classes.dir}"/>
                <pathelement location="jogl.jar"/>
                <pathelement location="gluegen-rt.jar"/>
                <pathelement location="gdal.jar"/>
                <pathelement location="build/lib/junit-4.5.jar"/>
                <pathelement location="${java.home}/lib/plugin.jar"/>
            </classpath>
        </javac>
    </target>

    <!-- Runs all World Wind Java JUnit tests and places the test results in the 'testResults' folder. Each test result
         outputs a single XML file formatted by JUnit. This runs all tests regardless of whether an individual tests
         fails. -->
    <target name="run.tests" depends="clean.test.reports, compile.tests">
        <mkdir dir="${worldwind.test.reports.dir}"/>
        <junit haltonfailure="false"
	       printsummary="true"
               fork="true"
	       forkmode="once"
               maxmemory="512m">
            <classpath>
                <pathelement location="${worldwind.src.dir}"/>
                <pathelement location="${worldwind.classes.dir}"/>
                <pathelement location="${worldwind.test.classes.dir}"/>
                <pathelement location="jogl.jar"/>
                <pathelement location="gluegen-rt.jar"/>
                <pathelement location="gdal.jar"/>
                <pathelement location="build/lib/junit-4.5.jar"/>
                <pathelement location="${java.home}/lib/plugin.jar"/>
            </classpath>
            <formatter type="xml"/>
            <batchtest todir="${worldwind.test.reports.dir}">
                <fileset dir="${worldwind.test.classes.dir}">
                    <include name="**/*Test.class"/>
                </fileset>
            </batchtest>
        </junit>
        <junitreport todir="${worldwind.test.reports.dir}">
            <fileset dir="${worldwind.test.reports.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${worldwind.test.reports.dir}"/>
        </junitreport>
    </target>

    <!-- Individual clean targets corresponding to each build target above. -->
    <target name="clean.test.classes">
        <delete dir="${worldwind.test.classes.dir}"/>
    </target>
    <target name="clean.test.reports">
        <delete dir="${worldwind.test.reports.dir}"/>
    </target>
    <!-- Main clean target for test build targets. Removes all files and directories created by all test build targets. -->
    <target name="clean.test.all" depends="clean.test.classes, clean.test.reports"/>

</project>
