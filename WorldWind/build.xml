<?xml version="1.0" encoding="ISO-8859-1"?>
<!--$Id$-->
<project name="worldwind" default="worldwind.jarfile" basedir=".">
    <description>
        Build script for the World Wind Java SDK. Compiles the World Wind source, creates World Wind API documentation,
        and builds World Wind JAR files. The default target 'worldwind.jarfile' builds the World Wind core JAR file. Use
        the target 'build' creates all the necessary World Wind JAR files and World Wind API documentation.
    </description>

    <!-- Import the World Wind build properties. All properties expected by ANT are defined in build.properties. -->
    <property file="build/build.properties"/>
    <!-- Import the World Wind test targets. -->
    <import file="build/test.xml"/>
    <!-- Import the World Wind release targets. -->
    <import file="build/release.xml"/>
    <!-- Import the World Wind demos website targets. -->
    <import file="build/demosite.xml"/>
    <!-- Import the World Wind native native library targets. -->
    <import file="build/native.xml"/>
    <!-- Import the World Wind general utility targets. -->
    <import file="build/util.xml"/>
    <!-- Import the World Wind Server Applications targets. -->
    <import file="servers/build.xml"/>

    <!-- Main build target for the World Wind Java SDK. Compiles the World Wind source, creates the World Wind API
         documentation, and builds the World Wind JAR files. -->
    <target name="build" depends="compile,
                                  javadocs,
                                  worldwind.jarfile,
                                  worldwind.extensions.jarfile"
            description="Main build target for the World Wind Java SDK. Compiles the World Wind source, creates the World Wind API documentation, and builds the World Wind JAR files."/>

    <!-- Compiles all World Wind Java sources under the 'src' folder into Java class files under the 'classes'
         folder. Note that this excludes the Java sources under the 'servers/src' and 'test' directories. We configure
         the javac task parameters 'source' and 'target' in order to explicitly control the Java compiler version used
         to build World Wind classes. Without these parameters, the javac task would use the most recent compiler
         available on the current machine, and the Java compiler version used to build WorldWind classes would be
         unpredictable. For this reason, the Apache ANT manual strongly recommends specifying the 'source' and 'target'
         parameters. See the following link for more detail: http://ant.apache.org/manual/CoreTasks/javac.html

         The Java compiler version used by the javac task is defined by the build parameter 'worldwind.jdk.version'.
         By default, this parameter is defined in the file 'build/build.properties'. -->
    <target name="compile"
            description="Compiles all World Wind Java sources under the 'src' folder into Java class files under the 'classes' folder.">
        <mkdir dir="${worldwind.classes.dir}"/>
        <javac srcdir="${worldwind.src.dir}"
               destdir="${worldwind.classes.dir}"
               source="${worldwind.jdk.version}"
               target="${worldwind.jdk.version}"
               fork="true"
               includeantruntime="false"
               encoding="ISO-8859-1"
               memoryMaximumSize="512m">
            <classpath>
                <pathelement location="jogl.jar"/>
                <pathelement location="gluegen-rt.jar"/>
                <pathelement location="gdal.jar"/>
                <pathelement location="${java.home}/lib/plugin.jar"/>
            </classpath>
        </javac>
    </target>

    <!-- Builds the World Wind API documentation for all core, extension, and server packages into the 'doc' folder.
         Includes all World Wind core classes under the packages 'gov.nasa.worldwind', World Wind extension classes
         under the package 'gov.nasa.worldwindx', and World Wind server classes under the package
         'gov.nasa.worldwind.servers'. Excludes World Wind format classes under the package
         'gov.nasa.worldwind.formats' -->
    <target name="javadocs" depends="clean.javadocs"
            description="Builds the World Wind API documentation for all core, extension, and server packages into the 'doc' folder.">
        <javadoc destdir="${worldwind.doc.dir}"
                 overview="${worldwind.src.dir}/overview.html"
                 windowtitle="NASA World Wind" doctitle="NASA World Wind API" header="NASA World Wind"
                 splitindex="true" protected="true" nodeprecated="true" version="false" author="false" use="true"
                 maxmemory="512m">
            <packageset dir="${worldwind.src.dir}" defaultexcludes="yes">
                <include name="gov/nasa/worldwind/**"/>
                <include name="gov/nasa/worldwindx/**"/>
                <exclude name="gov/nasa/worldwind/formats/**"/>
            </packageset>
            <packageset dir="${servers.src.dir}" defaultexcludes="yes">
                <include name="gov/nasa/worldwind/servers/**"/>
            </packageset>
            <classpath>
                <pathelement location="jogl.jar"/>
                <pathelement location="gluegen-rt.jar"/>
                <pathelement location="gdal.jar"/>
                <pathelement location="${java.home}/lib/plugin.jar"/>
            </classpath>
            <link href="http://download.oracle.com/javase/6/docs/api/"/>
            <link href="http://worldwind.arc.nasa.gov/java/jogl/docs/"/>
        </javadoc>
    </target>

    <!-- Builds the World Wind SDK core Jar file 'worldwind.jar'. Includes all World Wind core class files, property
         files, configuration files, and image files. Excludes files added by Subversion, and files added by the
         operating system. The resultant Jar file is dependent on jogl.jar, gluegen-rt.jar, and gdal.jar, and has these
         Jar files added to its class-path. -->
    <target name="worldwind.jarfile" depends="compile"
            description="Builds the World Wind core JAR file 'worldwind.jar'.">
        <jar jarfile="${basedir}/${worldwind.jarfile}">
            <manifest>
                <attribute name="Class-Path" value="jogl.jar gluegen-rt.jar gdal.jar"/>
            </manifest>
            <!-- Include the World Wind core package gov.nasa.worldwind, as well as the 3rd party packages
                 com.zebraimaging and org.codehaus.jackson. The zebraimaging package includes an alternative input
                 handler for the Zebra Imaging display controller. The jackson package includes the Jackson JSON parsing
                 library which is used by gov.nasa.worldwind.formats.geojson. -->
            <fileset dir="${worldwind.classes.dir}">
                <include name="gov/nasa/worldwind/**/*.class"/>
                <include name="com/zebraimaging/**/*.class"/>
                <include name="org/codehaus/jackson/**/*.class"/>
                <type type="file"/>
            </fileset>
            <!-- Include the MessageStrings properties files, and all resource files under the config and images
                 packages. We include the entire config and images packages rather than defining patterns for resource
                 file extensions for two reasons: (a) this avoids packaging unnecessary resources in the Jar file, and
                 (b) this ensures that anything added to config or images is included without requiring changes to this
                 build target. -->
            <fileset dir="${worldwind.src.dir}">
                <include name="gov/nasa/worldwind/util/**/*.properties"/>
                <include name="config/**"/>
                <include name="images/**"/>
                <type type="file"/>
            </fileset>
        </jar>
    </target>

    <!-- Builds the World Wind SDK extensions Jar file 'worldwindx.jar'. Includes all World Wind extension class files,
         configuration files, image files, and data resource files. Excludes files added by Subversion and files added
         by the operating system. The resultant Jar file is dependent on the the World Wind core Jar file, and has that
         Jar file added to its class-path. -->
    <target name="worldwind.extensions.jarfile" depends="compile"
            description="Builds the World Wind extensions JAR file 'worldwindx.jar'.">
        <jar jarfile="${basedir}/${worldwind.extensions.jarfile}">
            <manifest>
                <attribute name="Class-Path" value="${worldwind.jarfile}"/>
                <attribute name="Main-Class" value="${worldwind.extensions.jarfile.mainclass}"/>
            </manifest>
            <!-- Include class files for the World Wind extensions package gov.nasa.worldwindx. -->
            <fileset dir="${worldwind.classes.dir}">
                <include name="gov/nasa/worldwindx/**/*.class"/>
                <type type="file"/>
            </fileset>
            <!-- Include all the SAR application configuration files and images, the WorldWindow framework configuration
                 files and images, and example data and image files. We include the entire data, config, and images
                 packages rather than defining patterns for resource file extensions for two reasons: (a) this avoids
                 packaging unnecessary resources in the Jar file, and (b) this ensures that anything added to config or
                 images is included without requiring changes to this build target. -->
            <fileset dir="${worldwind.src.dir}">
                <include name="gov/nasa/worldwindx/applications/sar/*.html"/>
                <include name="gov/nasa/worldwindx/applications/sar/config/**"/>
                <include name="gov/nasa/worldwindx/applications/sar/data/**"/>
                <include name="gov/nasa/worldwindx/applications/sar/images/**"/>
                <include name="gov/nasa/worldwindx/applications/worldwindow/config/**"/>
                <include name="gov/nasa/worldwindx/applications/worldwindow/images/**"/>
                <include name="gov/nasa/worldwindx/examples/data/**"/>
                <include name="gov/nasa/worldwindx/examples/images/**"/>
                <type type="file"/>
            </fileset>
        </jar>
    </target>

    <!-- Builds the World Wind performance Jar file 'worldwind-performance.jar'. Includes all World Wind performance
         class files and data resource files. The resultant Jar file is dependent on the World Wind core Jar file and
         the World Wind extensions Jar file, and has those Jar files added to its class-path. -->
    <target name="worldwind.performance.jarfile" depends="compile"
            description="Builds the World Wind performance JAR file 'worldwind-performance.jar'.">
        <jar jarfile="${basedir}/${worldwind.performance.jarfile}">
            <manifest>
                <attribute name="Class-Path" value="${worldwind.jarfile} ${worldwind.extensions.jarfile}"/>
                <attribute name="Main-Class" value="${worldwind.performance.jarfile.mainclass}"/>
            </manifest>
            <!-- Include class files for the World Wind performance package performance. -->
            <fileset dir="${worldwind.classes.dir}">
                <include name="performance/**/*.class"/>
                <type type="file"/>
            </fileset>
            <!-- Include the the resource files required by the performance packages. We include only specific files to
                 avoid including the entire testData folder, which contains many files that are not required to run the
                 performance applications. -->
            <fileset dir="${basedir}">
                <include name="testData/Final.jpg"/>
                <type type="file"/>
            </fileset>
        </jar>
    </target>

    <!-- Individual clean targets corresponding to each build target above. -->
    <target name="clean.classes">
        <delete dir="${worldwind.classes.dir}"/>
    </target>
    <target name="clean.javadocs">
        <delete dir="${worldwind.doc.dir}"/>
    </target>
    <target name="clean.worldwind.jarfile">
        <delete file="${basedir}/${worldwind.jarfile}"/>
    </target>
    <target name="clean.worldwind.extensions.jarfile">
        <delete file="${basedir}/${worldwind.extensions.jarfile}"/>
    </target>
    <target name="clean.worldwind.performance.jarfile">
        <delete file="${basedir}/${worldwind.performance.jarfile}"/>
    </target>
    <target name="clean.build" depends="clean.classes,
                                        clean.javadocs,
                                        clean.worldwind.jarfile,
                                        clean.worldwind.extensions.jarfile,
                                        clean.worldwind.performance.jarfile"/>
    <!-- Main clean target for the World Wind Java SDK. Removes all files and directories created by all World Wind
         build targets. -->
    <target name="clean.all" depends="clean.build,
                                      clean.test.all,
                                      clean.worldwind.release,
                                      clean.demosite.all,
                                      clean.native.all,
                                      clean.servers.all"
            description="Main clean target for the World Wind Java SDK. Removes all files and directories created by all World Wind build targets."/>

</project>
